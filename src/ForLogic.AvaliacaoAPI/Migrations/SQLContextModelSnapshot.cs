// <auto-generated />
using System;
using ForLogic.AvaliacaoAPI.Model.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ForLogic.AvaliacaoAPI.Migrations
{
    [DbContext(typeof(SQLContext))]
    partial class SQLContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ForLogic.AvaliacaoAPI.Model.Avaliacao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DataReferencia")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_referencia");

                    b.Property<int>("Pontuacao")
                        .HasColumnType("int")
                        .HasColumnName("pontuacao");

                    b.HasKey("Id");

                    b.ToTable("avaliacao");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DataReferencia = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Pontuacao = 0
                        },
                        new
                        {
                            Id = 2L,
                            DataReferencia = new DateTime(2023, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Pontuacao = 0
                        });
                });

            modelBuilder.Entity("ForLogic.AvaliacaoAPI.Model.AvaliacaoCliente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AvaliacaoId")
                        .HasColumnType("bigint");

                    b.Property<long>("CategoriaNotaId")
                        .HasColumnType("bigint");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataAvaliacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_avaliacao");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("motivo");

                    b.Property<int>("Nota")
                        .HasColumnType("int")
                        .HasColumnName("nota");

                    b.Property<long>("avaliacao_id")
                        .HasColumnType("bigint");

                    b.Property<long>("categoria_nota_id")
                        .HasColumnType("bigint");

                    b.Property<long>("cliente_id")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("avaliacao_id");

                    b.HasIndex("categoria_nota_id");

                    b.HasIndex("cliente_id");

                    b.ToTable("avalicao_cliente");
                });

            modelBuilder.Entity("ForLogic.AvaliacaoAPI.Model.CategoriaNota", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("NomeCategoria")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("nome_categoria");

                    b.Property<int>("NotaMaxima")
                        .HasColumnType("int")
                        .HasColumnName("nota_maxima");

                    b.Property<int>("NotaMinima")
                        .HasColumnType("int")
                        .HasColumnName("nota_minima");

                    b.HasKey("Id");

                    b.ToTable("categoria_nota");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            NomeCategoria = "Detratores",
                            NotaMaxima = 6,
                            NotaMinima = 0
                        },
                        new
                        {
                            Id = 2L,
                            NomeCategoria = "Neutros",
                            NotaMaxima = 8,
                            NotaMinima = 7
                        },
                        new
                        {
                            Id = 3L,
                            NomeCategoria = "Promotores",
                            NotaMaxima = 10,
                            NotaMinima = 9
                        });
                });

            modelBuilder.Entity("ForLogic.AvaliacaoAPI.Model.Cliente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cnpj");

                    b.Property<DateTime>("DataInsercao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_insercao");

                    b.Property<string>("NomeCliente")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("nome_cliente");

                    b.Property<string>("NomeContato")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("nome_contato");

                    b.HasKey("Id");

                    b.ToTable("cliente");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Cnpj = "10.234.111/0001-01",
                            DataInsercao = new DateTime(2023, 5, 7, 23, 3, 10, 831, DateTimeKind.Local).AddTicks(6923),
                            NomeCliente = "Cliente A",
                            NomeContato = "Cliente A Contato"
                        },
                        new
                        {
                            Id = 2L,
                            Cnpj = "10.334.111/0001-01",
                            DataInsercao = new DateTime(2023, 5, 7, 23, 3, 10, 831, DateTimeKind.Local).AddTicks(6948),
                            NomeCliente = "Cliente B",
                            NomeContato = "Cliente B Contato"
                        });
                });

            modelBuilder.Entity("ForLogic.AvaliacaoAPI.Model.AvaliacaoCliente", b =>
                {
                    b.HasOne("ForLogic.AvaliacaoAPI.Model.Avaliacao", "Avaliacao")
                        .WithMany("AvaliacoesDosClientes")
                        .HasForeignKey("avaliacao_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ForLogic.AvaliacaoAPI.Model.CategoriaNota", "CategoriaNota")
                        .WithMany()
                        .HasForeignKey("categoria_nota_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ForLogic.AvaliacaoAPI.Model.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("cliente_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Avaliacao");

                    b.Navigation("CategoriaNota");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ForLogic.AvaliacaoAPI.Model.Avaliacao", b =>
                {
                    b.Navigation("AvaliacoesDosClientes");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using ForLogic.ClienteAPI.Model.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ForLogic.ClienteAPI.Migrations
{
    [DbContext(typeof(SQLContext))]
    partial class SQLContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ForLogic.ClienteAPI.Model.Cliente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cnpj");

                    b.Property<DateTime>("DataInsercao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_insercao");

                    b.Property<string>("NomeCliente")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("nome_cliente");

                    b.Property<string>("NomeContato")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("nome_contato");

                    b.HasKey("Id");

                    b.ToTable("cliente");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Cnpj = "XX.XXX.XXX/0001-XX",
                            DataInsercao = new DateTime(2023, 5, 6, 22, 55, 8, 801, DateTimeKind.Local).AddTicks(9048),
                            NomeCliente = "Cliente A",
                            NomeContato = "Cliente A Contato"
                        },
                        new
                        {
                            Id = 2L,
                            Cnpj = "XX.XXX.XXX/0001-XX",
                            DataInsercao = new DateTime(2023, 5, 6, 22, 55, 8, 801, DateTimeKind.Local).AddTicks(9073),
                            NomeCliente = "Cliente B",
                            NomeContato = "Cliente B Contato"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
